'Designed for a PIC16F747
'Hardware configuration is as follows:
'Pin 1		Vcc
'Pin 2 		West Limit Switch input
'Pin 3 		West LED input
'Pin 4		Vpp
'Pin 5		N/C
'Pin 6		N/C
'Pin 7		LED output (night mode)
'Pin 8		East/West switch
'Pin 9		East limit switch input
'Pin 10		N/C
'Pin 11		Manual/Auto switch input
'Pin 12		N/C
'Pin 13		N/C
'Pin 14		West solenoid output
'Pin 15		East solenoid output
'Pin 16		Pump relay output
'Pin 17		East LED input
'Pin 18		ICSPCLK
'Pin 19		ICSPDAT
'Pin 20		Vss


@ device pic16F747, INTRC_OSC_NOCLKOUT, MCLR_OFF 

' Inputs
sw_scroll       var     PORTA.2
sw_increase     var     PORTA.3
sw_decrease		var		PORTA.4
sw_select       var     PORTA.5
sw_manauto      var     PORTD.5
eastLimit       VAR     PORTD.4
westLimit       var     PORTC.7

' Outputs
lcdBacklight	var		PORTB.5
pumpRelay       VAR     PORTC.2
eastSol         var     PORTC.1
westSol         VAR     PORTC.0
MAX_DELTA		CON		30

OSCCON = %01100000

'OSCCON.6 = 1
'OSCCON.5 = 1
'OSCCON.4 = 0
'OSCcON.1 = 1
'osccon.0 = 0

lcdON			var 	byte
trackMode       VAR     BYTE
ledValue        var     word
ledValue1       VAR     WORD
ledValue2       VAR     WORD
centerVal       var     word
offset          var     word
pumptime        var     byte
estwstval       var     word
limcnt          var     word
menuItem        var     byte
nightDelay      var     word
trackUpdate     var     word
timeCnt         var     word
twirly          VAR     byte
centerTime      VAR     WORD
eveningDelay    VAR     WORD

'Set the RIS registers.  0 = output, 1 = input
TRISA = %00111111
TRISB = %00000000
TRISC = %10000000
TRISD = %00110000

'Set AN13 - AN2 pins as digital inputs
ADCON1 = ADCON1 | %00001101

'Make sure all the outputs are off to begin with
'PORTC = %00000000

' Set LCD Data port
DEFINE LCD_DREG	PORTB
' Set starting Data bit (0 or 4) if 4-bit bus
DEFINE LCD_DBIT	0
' Set LCD Register Select port
DEFINE LCD_RSREG	PORTD
' Set LCD Register Select bit
DEFINE LCD_RSBIT	7
' Set LCD Enable port
DEFINE LCD_EREG	PORTD
' Set LCD Enable bit
DEFINE LCD_EBIT	6
' Set LCD bus size (4 or 8 bits)
DEFINE LCD_BITS	4
' Set number of lines on LCD
DEFINE LCD_LINES	2
' Set command delay time in us
DEFINE LCD_COMMANDUS	2000
' Set data delay time in us
DEFINE LCD_DATAUS	50

' Define the ADC parameters
Define	ADC_BITS		10	' Set number of bits in result
Define	ADC_CLOCK		3	' Set clock source (3=RC)
Define	ADC_SAMPLEUS	200	' Set sampling time in uS
'Define	OSC				4
' Right-justify the ADC value
ADCON1.7 = 1


twirly = 0
lcdON = 0
trackMode = 0       ' Default to auto day-track
trackupdate = 16000 ' Default to updating the track every half hour
centerval = 600     ' 496 all the way west
                    ' 763 all to the east
offset = 0
eveningdelay = 3600
nightdelay = 28800
centerTime = 10000
timecnt = 0

' Give everything a bit to stabilize
Pause 500

main:
    ' Initialize the low-pass filter
    ADCin 0, ledvalue
    adcin 0, ledvalue1
    adcin 0, ledvalue2
    
	while(1)
		Pause 100
		if(sw_scroll) Then
			while(sw_scroll)
				' Wait until we let off the button
			wend
			GoSub menu
			menuItem = 0
		endif
		
		if(sw_manauto) then
            gosub mancontrol
        endif
        
        if(sw_select) then
            gosub track
            timecnt = 0
        endif
		
		' Handle LCD backlight auto shut-off
		if(lcdON > 80) Then
			lcdON = 0
			low lcdBacklight
		endif
		
		if(lcdON > 0) Then
			lcdON = lcdON + 1
		endif
		
		' Save current values
		
		LCDOUT $FE, 1, "Tracking Mode:"
		if(trackMode == 0) then
            lcdout $FE,$C0,"Auto Day ",#timeCnt
            if(lcdon != 0) then
                High lcdbacklight
            endif
        endif
        
        if(trackMode == 1) then
            timecnt = 0
            gosub moveNight
        endif
        
        if(trackMode == 2) then
            timecnt = 0
            gosub moveEvening
        endif
        
        timecnt = timecnt + 1
        if((timecnt > trackupdate) && (trackMode == 0)) then
            ' Now run the main tracking routine
            gosub track
            timeCnt = 0
        endif
	wend

moveNight:
    LCDOUT $FE, 1, "Tracking Mode:"
    while(timeCnt < nightDelay && !sw_scroll && !sw_manauto)
        pause 1000
        lcdout $FE, $C0,"Night:  ", #timeCnt
        timecnt = timecnt + 1
    wend
    ' In case either of these buttons were pressed, 
    if(sw_scroll) then
        gosub menu
        goto moveNight
    endif
    
    if(sw_manauto) then
        gosub mancontrol
        goto moveNight
    endif
    
    gosub moveEast
    trackmode = 0
RETURN
	
moveEvening:
    LCDOUT $FE, 1, "Tracking Mode:"
    while(timeCnt < eveningdelay && !sw_scroll && !sw_manauto) 
        pause 1000
        lcdout $FE, $C0,"Evening  ", #timeCnt
        timeCnt = timeCnt + 1
    wend
    ' In case either of these buttons were pressed
    if(sw_scroll) then
        gosub menu
        goto moveEvening
    endif
    
    if(sw_manauto) then
        gosub mancontrol
        goto moveEvening
    endif
    
    high pumpRelay
    pause 200
    PortC = %00000110
    Pause centerTime
    PortC = %00000100
    Pause 2000
    PortC = %00000000
    trackmode = 1
Return
    
        

menu:
    ' A simple state machine to step through the menus
    menuItem = 0
    if(menuItem == 0) then
        'Display ADC Values
        LCDOUT $FE, 1, "Sensor Value:"
        High lcdbacklight
        lcdon = 1
        while(menuItem == 0)
            ADCIN 0, ledValue
            LCDOUT $FE,$C0, #ledValue
            High lcdbacklight
            pause 100
            if(sw_scroll) then
                while(sw_scroll)
                    ' Wait until we let off the button
                wend
                menuItem = 1
            endif
        wend
    endif
    
    if(menuItem == 1) then
        ' Adjust the value where the array is pointing at the sun
        ' Higher values offset to the west, lower values offset to the east
        LCDOUT $FE, 1, "Center Position:"
        High lcdbacklight
        lcdon = 1
        while(menuItem == 1)
            LCDOUT $FE,$C0, #centerval
            High lcdbacklight
            pause 50
            if(sw_increase) then
                centerval = centerval + 1
            endif
            if(sw_decrease) then
                centerval = centerval - 1
            endif
            if(sw_scroll) then
                while(sw_scroll)
                    ' Wait until we let off the button
                wend
                menuItem = 2
            endif
        wend
    endif
    
    if(menuItem == 2) then
        'Adjust how long it takes to run the array back to center
        LCDOUT $FE, 1, "Center Time(s):"
        High lcdbacklight
        lcdon = 1
        while(menuItem == 2)
            LCDOUT $FE,$C0, #centerTime
            High lcdbacklight
            pause 50
            if(sw_increase) then
                centertime = centerTime + 1
            endif
            if(sw_decrease) then
                centertime = centerTime - 1
            endif
            if(sw_scroll) then
                while(sw_scroll)
                    ' Wait until we let off the button
                wend
                menuItem = 3
            endif
        wend
    endif
            
    if(menuItem == 3) then
        'Adjust the night delay
        LCDOUT $FE, 1, "Night Delay(s):"
        High lcdbacklight
        lcdon = 1
        while(menuItem == 3)
            LCDOUT $FE,$C0, #nightDelay
            High lcdbacklight
            pause 50
            if(sw_increase) then
                nightdelay = nightdelay + 1
            endif
            if(sw_decrease) then
                nightdelay = nightdelay - 1
            endif
            if(sw_scroll) then
                while(sw_scroll)
                    ' Wait until we let off the button
                wend
                menuItem = 4
            endif
        wend
    endif
    
    if(menuItem == 4) then
        'Adjust how often we update the array position
        LCDOUT $FE, 1, "Track Update(s):"
        High lcdbacklight
        lcdon = 1
        while(menuItem == 4)
            LCDOUT $FE,$C0, #trackUpdate
            High lcdbacklight
            pause 50
            if(sw_increase) then
                trackUpdate = trackUpdate + 1
            endif
            if(sw_decrease) then
                trackUpdate = trackUpdate - 1
            endif
            if(sw_scroll) then
                while(sw_scroll)
                    ' Wait until we let off the button
                wend
                menuItem = 5
            endif
        wend
    endif
Return
	
track:
	ADCIN 0, ledValue		'Read ADC channel 0 (port A.0, pin 2) 
	
	if((ledValue <= centerVal) && !westlimit) then
        'The sun's gone down and we're pressed against the west limit switch
        trackMode = 2
    else
        If ((ledValue - offset) > centerVal) Then	
        'It needs to be moved to the west
            If((ledValue - centerVal) > MAX_DELTA) Then
                Gosub moveWest
            Endif
        endif
	Endif        
return

'This routine is called by "track" and re-aligns the array with the sun	
moveWest:
	'If we're not already pressed against the limit switch...
	If(westLimit) Then
		'Turn on the pump
		High pumpRelay
		'Wait a bit for it to build up a little pressure
		Pause 200
		'Turn on the solenoid to move the array west
		PortC = %00000101
		Pause 100
		
		While (westLimit && ((ledValue + offset) > centerVal) && (limcnt < 1200) && (!sw_manauto))
			'Update the sensor inputs until we either hit a limit switch or re-align with the sun
			'Low-pass filter the ADC input to reduce noise
			ledvalue2 = ledvalue1
            ledvalue1 = ledvalue
            ADCIN 0, ledValue
            if(ledValue > 450) then
               ledvalue = (ledvalue / 3) + (ledvalue1 / 3) + (ledvalue2 / 3)
            else
               ledvalue = ledvalue1
            endif
            
			Pause 50
			limcnt = limcnt + 1
		Wend
		
		'Turn off the solenoid
		PortC = %00000100
		Pause 1000
		'Shut down the pump
		PortC = %00000000
	Endif
	limcnt = 0
Return


' This is just for moving the array back to the east at night
moveEast:
	'If we're not already pressed against the limit switch...
	If(eastLimit) Then
		'Turn on the pump
		High pumpRelay
		'Wait a few seconds for it to come up to speed and build up pressure
		Pause 200
		'Turn on the solenoid to move the array east
		while(eastLimit)
            PortC = %00000110
        wend
		Pause 50
		'Turn off the solenoid
		PortC = %00000100
		Pause 1000
		'Shut down the pump
		PortC = %00000000
	Endif
Return

manControl:
	'Subroutine for manual control mode.  ADC1 is pulled by on-board resistors to ~2.5v
	'When the control switch is thrown, ADC1 is either pulled up to Vcc or down to Vss
	'This gives us 3 positions for the control switch: move east, move west, and do nothing
	
	'Initialize on-time counter
	pumptime = 0

	while(sw_manauto)
        LCDOUT $FE, 1, "Manual Mode"
        High lcdbacklight
        lcdon = 1
	 
		ADCIN 1, estwstval
		if((estwstval > 900) && westLimit) Then
			'Pin is high, go west
			If(pumptime == 0) Then
				'The pump's off, turn it on
				High pumpRelay
				'Start the on-time counter
				pumptime = 1
				Pause 200
			Endif
			
			while((estwstval > 900) && westLimit)
                LCDOUT $FE,$C0, "Moving West"
				ADCIN 1, estwstval
				'Turn on the west solenoid on
				PortC = %00000101
			wend
			'Turn off the solenoid
			PortC = %00000100
			'Reset pump on-time counter
			pumptime = 1
		Endif
		
		if((estwstval < 100) && eastLimit) Then
			'Pin is low, go east
			If(pumptime == 0) Then
				'The pump's off, turn it on
				High pumpRelay
				'Start the on-time counter
				pumptime = 1
				Pause 200
			Endif
			
			while((estwstval < 100) && eastLimit)
                LCDOUT $FE,$C0, "Moving East"
				ADCIN 1, estwstval
				'Turn on the east solenoid
				PortC = %00000110
			wend
			'Turn off the solenoid
			PortC = %00000100
			'Reset pump on-time counter
			pumptime = 1
		Endif
		
		Pause 50
		
		If(pumptime) Then
			'Increment the pump on-time counter
			pumptime = pumptime + 1
		Endif
		
		If(pumptime > 200) Then 
			'The pump has been running 10 seconds, go ahead and shut it off
			Low pumpRelay
			'Disable the counter
			pumptime = 0
		Endif
	wend
	
	PortC = %00000000
Return
